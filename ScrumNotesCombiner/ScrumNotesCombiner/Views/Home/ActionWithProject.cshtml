@using ScrumNotesCombiner.Models
@model NewProject
@{
    ViewBag.Title = "ActionWithProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="full_w">
    <div class="h_title">Create a new project</div>
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary()
        if (Model.AllowEdit)
        {
            <p>Allias: 
                @Html.TextBoxFor(x => x.Title, new { style = "width:280px" })
            </p>
            <p>Project administrator
                @Html.DropDownListFor(m => m.Admin, new SelectList(Model.ListForProjectAdmin, "id", "Allias", Model.ListForProjectAdmin.First().id))
            </p>
            <p>Start date: @Html.TextBoxFor(x => x.StartDate, new { style = "width:250px" })</p>
            <p>Est.finish date: @Html.TextBoxFor(x => x.EstFinishDate, new { style = "width:230px" })</p>
            <p>Comments:</p>
            <p>@Html.TextAreaFor(x => x.Comments, new { style = "width:310px; height:100px" })</p>
            <input type ="submit" value ="Create new project" />
        }
        else
        {
            <p>Allias: 
                @Html.TextBoxFor(x => x.Title, new { style = "width:280px", @readonly = "readonly" })
            </p>
            <p>Project administrator
                @Html.TextBoxFor(x => x.Admin, new { @readonly = "readonly" })
            </p>
            <p>Start date: @Html.TextBoxFor(x => x.StartDate, new { style = "width:250px", @readonly = "readonly" })</p>
            <p>Est.finish date: @Html.TextBoxFor(x => x.StartDate, new { style = "width:230px", @readonly = "readonly" })</p>
            <p>Comments:</p>
            <p>@Html.TextAreaFor(x => x.Comments, new { style = "width:310px; height:100px", @readonly = "readonly" })</p>
            <input type ="submit" value ="Save project" />
        }
    }
</div>

<div class="full_w">
    <div class="h_title">Project scheduling statuses statuses:</div>
    <table>
        <thead>
            <tr>
                <th scope="col">Allias</th>
                <th scope="col">Type</th>
                <th scope="col">Day of week</th>
                <th scope="col">Day of month</th>
                <th scope="col">Scheduled time</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
						
        <tbody>
            
            @foreach (SchedulingStatusViewList schedulingstatus in Model.SchedulingStatusList.SchedulingStatusDbList)
            {
                @:<tr>
                @:<td>@schedulingstatus.Allias</td>
                @:<td>@schedulingstatus.Type</td>
                @:<td>@schedulingstatus.DayOfWeek</td>
                @:<td>@schedulingstatus.DayOfMonth</td>
                @:<td>@schedulingstatus.ScheduledTime</td>
                @:<td>
                if (Model.AllowEdit)
                {
                    @:<a href="#" class="table-icon edit" title="Edit"></a>
                    @:<a href="#" class="table-icon delete" title="Delete"></a>
                }

                @:</td>
                @:</tr>
            }
           
        </tbody>
    </table>
    @if (Model.AllowEdit)
    {
        <button type="submit" class="add">@Html.ActionLink("Create new scheduling status", "ActionWithScheduledStatus", "Home", new { id = "new", action = "create" }, null)</button>
    }
</div>

<div class="full_w">
    <div class="h_title">New project users roles:</div>
    <table>
        <thead>
            <tr>
                <th scope="col">Allias</th>
                <th scope="col">Domain name</th>
                <th scope="col">e-mail</th>
                <th scope="col" style="width: 65px;">Role</th>
            </tr>
        </thead>
						
        <tbody>
            @foreach (UsersViewListForProject userslist in Model.UsersListForProject.UsersDbListForProject)
            {
                <tr>
                    <td class="align-center">@userslist.Allias</td>
                    <td>@userslist.ADusername</td>
                    <td>@userslist.Email</td>
                    <td>
                        @if (Model.AllowEdit)
                        {
                            @Html.DropDownListFor(x => x.ProjectMembers, new[] { new SelectListItem { Text = "Project admin", Value = bool.TrueString }, new SelectListItem { Text = "Project member", Value = bool.FalseString } }, "-")
                        }
                        else
                        {
                            //@Html.TextBoxFor(x => x.ProjectMembers)
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.AllowEdit)
    {
        <button type="submit" class="add">@Html.ActionLink("Add new user to project", "ActionWithScheduledStatus", "Home", new { id = "new", action = "create" }, null)</button>
    }
</div>

<script type="text/javascript">
    $(document).ready(function() {
        $.datepicker.regional['ru'] = {
            closeText: 'Закрыть',
            prevText: '<Пред',
            nextText: 'След>',
            currentText: 'Сегодня',
            monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',
                'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн',
                'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
            dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда',
                'четверг', 'пятница', 'суббота'],
            dayNamesShort: ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'сбт'],
            dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
            weekHeader: 'Не',
            dateFormat: 'dd.mm.yy',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ''
        };
        $.datepicker.setDefaults($.datepicker.regional['ru']);

        $.timepicker.regional['ru'] = {
            timeOnlyTitle: 'Выберите время',
            timeText: 'Время',
            hourText: 'Часы',
            minuteText: 'Минуты',
            secondText: 'Секунды',
            millisecText: 'миллисекунды',
            currentText: 'Текущая',
            closeText: 'Закрыть',
            ampm: false
        };
        $.timepicker.setDefaults($.timepicker.regional['ru']);
        $("form").validate({
            errorLabelContainer: "#errdv",
            rules: { Id: { required: true, maxlength: 3 }, NewPrice: { required: true } },
            messages: {
                Id: {
                    required: "Поле обязательно для заполнения.",
                    maxlength: "Длина не более 3 символов."
                }
            }
        });
    });
</script>

@if (Model.AllowEdit)
{
    <script type="text/javascript">
        $("input[name='StartDate']").datetimepicker();
        $("input[name='EstFinishDate']").datetimepicker();
    </script>
}